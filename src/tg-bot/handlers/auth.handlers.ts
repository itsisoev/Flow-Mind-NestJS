import { Context } from 'telegraf';
import { loginSessions, userTokens, userUUIDMap } from '../tg-state';
import { actionButtonsForGuest } from '../tg-bot.buttons';

export async function handleLogin(ctx: Context) {
  const userId = ctx.from.id;
  loginSessions.set(userId, { mode: 'login', step: 'username' });
  await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—Ö–æ–¥–∞:');
}

export async function handleRegister(ctx: Context) {
  const userId = ctx.from.id;
  loginSessions.set(userId, { mode: 'register', step: 'username' });
  await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:');
}

export async function handleLogout(ctx: Context) {
  const userId = ctx.from.id;
  userTokens.delete(userId);
  userUUIDMap.delete(userId);
  loginSessions.delete(userId);
  await ctx.reply('üëã –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.');
  await ctx.reply('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', actionButtonsForGuest());
}
